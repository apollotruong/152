Terminals unused in grammar

   ELSEIF


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 identifiers: ident
   10            | ident COMMA identifiers

   11 ident: IDENT

   12 statements: %empty
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expr
   15          | IF bool-expr THEN statements ENDIF
   16          | IF bool-expr THEN statements ELSE statements ENDIF
   17          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expr

   23 bool-expr: rel-and-expr
   24          | rel-and-expr OR rel-and-expr

   25 rel-and-expr: rel-expr
   26             | rel-expr AND rel-expr

   27 rel-expr: NOT expr comp expr
   28         | NOT TRUE
   29         | NOT FALSE
   30         | NOT L_PAREN bool-expr R_PAREN
   31         | expr comp expr
   32         | TRUE
   33         | FALSE
   34         | L_PAREN bool-expr R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 exprs: expr
   42      | expr COMMA exprs

   43 expr: mult-expr
   44     | mult-expr SUB mult-expr
   45     | mult-expr ADD mult-expr

   46 mult-expr: term
   47          | term MULT term
   48          | term DIV term
   49          | term MOD term

   50 term: SUB var
   51     | SUB number
   52     | SUB L_PAREN expr R_PAREN
   53     | SUB ident L_PAREN exprs R_PAREN
   54     | var
   55     | number
   56     | L_PAREN expr R_PAREN
   57     | ident L_PAREN exprs R_PAREN

   58 number: NUMBER

   59 vars: var
   60     | var COMMA vars

   61 var: ident
   62    | ident L_SQUARE_BRACKET expr R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 8
OF (267) 8
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
ELSEIF (272)
WHILE (273) 17 18
DO (274) 18
BEGINLOOP (275) 17 18
ENDLOOP (276) 17 18
CONTINUE (277) 21
READ (278) 19
WRITE (279) 20
AND (280) 26
OR (281) 24
NOT (282) 27 28 29 30
TRUE (283) 28 32
FALSE (284) 29 33
RETURN (285) 22
SUB (286) 44 50 51 52 53
ADD (287) 45
MULT (288) 47
DIV (289) 48
MOD (290) 49
EQ (291) 35
NEQ (292) 36
LT (293) 37
GT (294) 38
LTE (295) 39
GTE (296) 40
SEMICOLON (297) 4 6 13
COLON (298) 7 8
COMMA (299) 10 42 60
L_PAREN (300) 30 34 52 53 56 57
R_PAREN (301) 30 34 52 53 56 57
L_SQUARE_BRACKET (302) 8 62
R_SQUARE_BRACKET (303) 8 62
ASSIGN (304) 14
NUMBER (305) 8 58
IDENT (306) 11


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8, on right: 6
identifiers (58)
    on left: 9 10, on right: 7 8 10
ident (59)
    on left: 11, on right: 4 9 10 53 57 61 62
statements (60)
    on left: 12 13, on right: 4 13 15 16 17 18
statement (61)
    on left: 14 15 16 17 18 19 20 21 22, on right: 13
bool-expr (62)
    on left: 23 24, on right: 15 16 17 18 30 34
rel-and-expr (63)
    on left: 25 26, on right: 23 24
rel-expr (64)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
comp (65)
    on left: 35 36 37 38 39 40, on right: 27 31
exprs (66)
    on left: 41 42, on right: 42 53 57
expr (67)
    on left: 43 44 45, on right: 14 22 27 31 41 42 52 56 62
mult-expr (68)
    on left: 46 47 48 49, on right: 43 44 45
term (69)
    on left: 50 51 52 53 54 55 56 57, on right: 46 47 48 49
number (70)
    on left: 58, on right: 51 55
vars (71)
    on left: 59 60, on right: 19 20 60
var (72)
    on left: 61 62, on right: 14 50 54 59 60


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   11 ident: IDENT .

    $default  reduce using rule 11 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    9 identifiers: ident .
   10            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (identifiers)


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 23
    ident        go to state 14


State 19

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 24

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 38
    statement   go to state 39
    var         go to state 40


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 30

   15 statement: IF . bool-expr THEN statements ENDIF
   16          | IF . bool-expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident         go to state 48
    bool-expr     go to state 49
    rel-and-expr  go to state 50
    rel-expr      go to state 51
    expr          go to state 52
    mult-expr     go to state 53
    term          go to state 54
    number        go to state 55
    var           go to state 56


State 31

   17 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident         go to state 48
    bool-expr     go to state 57
    rel-and-expr  go to state 50
    rel-expr      go to state 51
    expr          go to state 52
    mult-expr     go to state 53
    term          go to state 54
    number        go to state 55
    var           go to state 56


State 32

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 58


State 33

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 34

   19 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 37
    vars   go to state 59
    var    go to state 60


State 35

   20 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 37
    vars   go to state 61
    var    go to state 60


State 36

   22 statement: RETURN . expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 63
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 37

   61 var: ident .
   62    | ident . L_SQUARE_BRACKET expr R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 61 (var)


State 38

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 65


State 39

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 66


State 40

   14 statement: var . ASSIGN expr

    ASSIGN  shift, and go to state 67


State 41

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 68


State 42

   27 rel-expr: NOT . expr comp expr
   28         | NOT . TRUE
   29         | NOT . FALSE
   30         | NOT . L_PAREN bool-expr R_PAREN

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 72
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 43

   32 rel-expr: TRUE .

    $default  reduce using rule 32 (rel-expr)


State 44

   33 rel-expr: FALSE .

    $default  reduce using rule 33 (rel-expr)


State 45

   50 term: SUB . var
   51     | SUB . number
   52     | SUB . L_PAREN expr R_PAREN
   53     | SUB . ident L_PAREN exprs R_PAREN

    L_PAREN  shift, and go to state 73
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident   go to state 74
    number  go to state 75
    var     go to state 76


State 46

   34 rel-expr: L_PAREN . bool-expr R_PAREN
   56 term: L_PAREN . expr R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident         go to state 48
    bool-expr     go to state 77
    rel-and-expr  go to state 50
    rel-expr      go to state 51
    expr          go to state 78
    mult-expr     go to state 53
    term          go to state 54
    number        go to state 55
    var           go to state 56


State 47

   58 number: NUMBER .

    $default  reduce using rule 58 (number)


State 48

   57 term: ident . L_PAREN exprs R_PAREN
   61 var: ident .
   62    | ident . L_SQUARE_BRACKET expr R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 79
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 61 (var)


State 49

   15 statement: IF bool-expr . THEN statements ENDIF
   16          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 80


State 50

   23 bool-expr: rel-and-expr .
   24          | rel-and-expr . OR rel-and-expr

    OR  shift, and go to state 81

    $default  reduce using rule 23 (bool-expr)


State 51

   25 rel-and-expr: rel-expr .
   26             | rel-expr . AND rel-expr

    AND  shift, and go to state 82

    $default  reduce using rule 25 (rel-and-expr)


State 52

   31 rel-expr: expr . comp expr

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 53

   43 expr: mult-expr .
   44     | mult-expr . SUB mult-expr
   45     | mult-expr . ADD mult-expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 43 (expr)


State 54

   46 mult-expr: term .
   47          | term . MULT term
   48          | term . DIV term
   49          | term . MOD term

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 46 (mult-expr)


State 55

   55 term: number .

    $default  reduce using rule 55 (term)


State 56

   54 term: var .

    $default  reduce using rule 54 (term)


State 57

   17 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 95


State 58

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 96
    statement   go to state 39
    var         go to state 40


State 59

   19 statement: READ vars .

    $default  reduce using rule 19 (statement)


State 60

   59 vars: var .
   60     | var . COMMA vars

    COMMA  shift, and go to state 97

    $default  reduce using rule 59 (vars)


State 61

   20 statement: WRITE vars .

    $default  reduce using rule 20 (statement)


State 62

   56 term: L_PAREN . expr R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 98
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 63

   22 statement: RETURN expr .

    $default  reduce using rule 22 (statement)


State 64

   62 var: ident L_SQUARE_BRACKET . expr R_SQUARE_BRACKET

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 99
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 65

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 66

   13 statements: statement SEMICOLON . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 100
    statement   go to state 39
    var         go to state 40


State 67

   14 statement: var ASSIGN . expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 101
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 68

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 69

   28 rel-expr: NOT TRUE .

    $default  reduce using rule 28 (rel-expr)


State 70

   29 rel-expr: NOT FALSE .

    $default  reduce using rule 29 (rel-expr)


State 71

   30 rel-expr: NOT L_PAREN . bool-expr R_PAREN
   56 term: L_PAREN . expr R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident         go to state 48
    bool-expr     go to state 102
    rel-and-expr  go to state 50
    rel-expr      go to state 51
    expr          go to state 78
    mult-expr     go to state 53
    term          go to state 54
    number        go to state 55
    var           go to state 56


State 72

   27 rel-expr: NOT expr . comp expr

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 103


State 73

   52 term: SUB L_PAREN . expr R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 104
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 74

   53 term: SUB ident . L_PAREN exprs R_PAREN
   61 var: ident .
   62    | ident . L_SQUARE_BRACKET expr R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 105
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 61 (var)


State 75

   51 term: SUB number .

    $default  reduce using rule 51 (term)


State 76

   50 term: SUB var .

    $default  reduce using rule 50 (term)


State 77

   34 rel-expr: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 106


State 78

   31 rel-expr: expr . comp expr
   56 term: L_PAREN expr . R_PAREN

    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88
    R_PAREN  shift, and go to state 107

    comp  go to state 89


State 79

   57 term: ident L_PAREN . exprs R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    exprs      go to state 108
    expr       go to state 109
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 80

   15 statement: IF bool-expr THEN . statements ENDIF
   16          | IF bool-expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 110
    statement   go to state 39
    var         go to state 40


State 81

   24 bool-expr: rel-and-expr OR . rel-and-expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident         go to state 48
    rel-and-expr  go to state 111
    rel-expr      go to state 51
    expr          go to state 52
    mult-expr     go to state 53
    term          go to state 54
    number        go to state 55
    var           go to state 56


State 82

   26 rel-and-expr: rel-expr AND . rel-expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    rel-expr   go to state 112
    expr       go to state 52
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 83

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 84

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 85

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 86

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 87

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 88

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 89

   31 rel-expr: expr comp . expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 113
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 90

   44 expr: mult-expr SUB . mult-expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    mult-expr  go to state 114
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 91

   45 expr: mult-expr ADD . mult-expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    mult-expr  go to state 115
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 92

   47 mult-expr: term MULT . term

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident   go to state 48
    term    go to state 116
    number  go to state 55
    var     go to state 56


State 93

   48 mult-expr: term DIV . term

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident   go to state 48
    term    go to state 117
    number  go to state 55
    var     go to state 56


State 94

   49 mult-expr: term MOD . term

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident   go to state 48
    term    go to state 118
    number  go to state 55
    var     go to state 56


State 95

   17 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 119
    statement   go to state 39
    var         go to state 40


State 96

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 120


State 97

   60 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 37
    vars   go to state 121
    var    go to state 60


State 98

   56 term: L_PAREN expr . R_PAREN

    R_PAREN  shift, and go to state 107


State 99

   62 var: ident L_SQUARE_BRACKET expr . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 122


State 100

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 101

   14 statement: var ASSIGN expr .

    $default  reduce using rule 14 (statement)


State 102

   30 rel-expr: NOT L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 123


State 103

   27 rel-expr: NOT expr comp . expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    expr       go to state 124
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 104

   52 term: SUB L_PAREN expr . R_PAREN

    R_PAREN  shift, and go to state 125


State 105

   53 term: SUB ident L_PAREN . exprs R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    exprs      go to state 126
    expr       go to state 109
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 106

   34 rel-expr: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 34 (rel-expr)


State 107

   56 term: L_PAREN expr R_PAREN .

    $default  reduce using rule 56 (term)


State 108

   57 term: ident L_PAREN exprs . R_PAREN

    R_PAREN  shift, and go to state 127


State 109

   41 exprs: expr .
   42      | expr . COMMA exprs

    COMMA  shift, and go to state 128

    $default  reduce using rule 41 (exprs)


State 110

   15 statement: IF bool-expr THEN statements . ENDIF
   16          | IF bool-expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 129
    ELSE   shift, and go to state 130


State 111

   24 bool-expr: rel-and-expr OR rel-and-expr .

    $default  reduce using rule 24 (bool-expr)


State 112

   26 rel-and-expr: rel-expr AND rel-expr .

    $default  reduce using rule 26 (rel-and-expr)


State 113

   31 rel-expr: expr comp expr .

    $default  reduce using rule 31 (rel-expr)


State 114

   44 expr: mult-expr SUB mult-expr .

    $default  reduce using rule 44 (expr)


State 115

   45 expr: mult-expr ADD mult-expr .

    $default  reduce using rule 45 (expr)


State 116

   47 mult-expr: term MULT term .

    $default  reduce using rule 47 (mult-expr)


State 117

   48 mult-expr: term DIV term .

    $default  reduce using rule 48 (mult-expr)


State 118

   49 mult-expr: term MOD term .

    $default  reduce using rule 49 (mult-expr)


State 119

   17 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 131


State 120

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 132


State 121

   60 vars: var COMMA vars .

    $default  reduce using rule 60 (vars)


State 122

   62 var: ident L_SQUARE_BRACKET expr R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


State 123

   30 rel-expr: NOT L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 30 (rel-expr)


State 124

   27 rel-expr: NOT expr comp expr .

    $default  reduce using rule 27 (rel-expr)


State 125

   52 term: SUB L_PAREN expr R_PAREN .

    $default  reduce using rule 52 (term)


State 126

   53 term: SUB ident L_PAREN exprs . R_PAREN

    R_PAREN  shift, and go to state 133


State 127

   57 term: ident L_PAREN exprs R_PAREN .

    $default  reduce using rule 57 (term)


State 128

   42 exprs: expr COMMA . exprs

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident      go to state 48
    exprs      go to state 134
    expr       go to state 109
    mult-expr  go to state 53
    term       go to state 54
    number     go to state 55
    var        go to state 56


State 129

   15 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 130

   16 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 135
    statement   go to state 39
    var         go to state 40


State 131

   17 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 132

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 5

    ident         go to state 48
    bool-expr     go to state 136
    rel-and-expr  go to state 50
    rel-expr      go to state 51
    expr          go to state 52
    mult-expr     go to state 53
    term          go to state 54
    number        go to state 55
    var           go to state 56


State 133

   53 term: SUB ident L_PAREN exprs R_PAREN .

    $default  reduce using rule 53 (term)


State 134

   42 exprs: expr COMMA exprs .

    $default  reduce using rule 42 (exprs)


State 135

   16 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 137


State 136

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 18 (statement)


State 137

   16 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)
